
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаписьЖурналаРегистрацииНаСервере("Jenkins.Форма.ПриОткрытии", ПредопределенноеЗначение("УровеньЖурналаРегистрации.Информация"), , , "Начало");
	
	РазобратьПараметрЗапускаНаСервере(ПараметрЗапуска);
	
	Если Объект.НужноПроверитьМодифицированностьКонфигурации И Не ПустаяСтрока(Объект.РасширенныйЛогФайл) Тогда
		ТекстСообщения = "CONFIG_STATE: " +
			?(Объект.КонфигурацияМодифицирована, "CONFIG_CHANGED", "CONFIG_NOT_CHANGED")
		;
		ЗаписатьИнформациюВЛог(ТекстСообщения);
	КонецЕсли;
	
	Если Объект.НужноОбновитьМетаданные Тогда
		ОбновитьМетаданныеНаСервере();
	КонецЕсли;
	
	Если Объект.НужноЗавершитьРаботу Тогда
		ЗаписьЖурналаРегистрацииНаСервере("Jenkins.Форма.ПриОткрытии", ПредопределенноеЗначение("УровеньЖурналаРегистрации.Информация"), , , "Перед прекращением работы");
		ПрекратитьРаботуСистемы(Ложь);
	КонецЕсли;
		
	ЗаписьЖурналаРегистрацииНаСервере("Jenkins.Форма.ПриОткрытии", ПредопределенноеЗначение("УровеньЖурналаРегистрации.Информация"), , , "Завершение");
	
КонецПроцедуры

&НаСервере
Процедура РазобратьПараметрЗапускаНаСервере(ПараметрЗапускаСистемы)
	
	о = РеквизитФормыВЗначение("Объект");
	о.РазобратьПараметрЗапуска(ПараметрЗапускаСистемы);
	ЗначениеВРеквизитФормы(о, "Объект");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьМетаданныеНаСервере()
	
	ЗаписьЖурналаРегистрации("Jenkins.Обновление метаданных", УровеньЖурналаРегистрации.Информация, , , "Запуск");
	Справочники.ИдентификаторыОбъектовМетаданных.ОбновитьДанныеСправочника();
	ЗаписьЖурналаРегистрации("Jenkins.Обновление метаданных", УровеньЖурналаРегистрации.Информация, , , "Выполнено успешно");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписьЖурналаРегистрацииНаСервере(ИмяСобытия = Неопределено, Уровень = Неопределено,
		ОбъектМетаданных = Неопределено, Данные = Неопределено, Комментарий = Неопределено, РежимТранзакции = Неопределено)
	
	ЗаписьЖурналаРегистрации(ИмяСобытия, Уровень, ОбъектМетаданных, Данные, Комментарий, РежимТранзакции);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИнформациюВЛог(ТекстСообщения)
	
	ФайлЛога = Новый Файл(Объект.РасширенныйЛогФайл);
	Если ПустаяСтрока(ФайлЛога.Путь) Тогда
		Разделитель = ПолучитьРазделительПутиКлиента();
		КатВремФайлов = КаталогВременныхФайлов();
		Объект.РасширенныйЛогФайл = КатВремФайлов + ?(СтрЗаканчиваетсяНа(КатВремФайлов, Разделитель), "", Разделитель) + Объект.РасширенныйЛогФайл;
	КонецЕсли;
	ФайлЛога = Новый Файл(Объект.РасширенныйЛогФайл);
	
	ТекстДок = Новый ТекстовыйДокумент;
	Если ФайлЛога.Существует() И ФайлЛога.ЭтоФайл() Тогда
		ТекстДок.Прочитать(ФайлЛога.ПолноеИмя);
	КонецЕсли;
	
	ТекстДок.ДобавитьСтроку(ТекстСообщения);
	Попытка
		ТекстДок.Записать(ФайлЛога.ПолноеИмя);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаписьЖурналаРегистрации("Jenkins.Форма.ПриСозданииНаСервере", УровеньЖурналаРегистрации.Информация, , , "Начало");
	
	ОбщегоНазначения.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	Отказ = Ложь;
	
	ЗаписьЖурналаРегистрации("Jenkins.Форма.ПриСозданииНаСервере", УровеньЖурналаРегистрации.Информация, , , "Отказ: " + Отказ);
	ЗаписьЖурналаРегистрации("Jenkins.Форма.ПриСозданииНаСервере", УровеньЖурналаРегистрации.Информация, , , "СтандартнаяОбработка: " + СтандартнаяОбработка);
	ЗаписьЖурналаРегистрации("Jenkins.Форма.ПриСозданииНаСервере", УровеньЖурналаРегистрации.Информация, , , "Завершение");
КонецПроцедуры

